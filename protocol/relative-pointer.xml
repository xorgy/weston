<?xml version="1.0" encoding="UTF-8"?>
<protocol name="relative_pointer">

  <copyright>
    Copyright © 2014      Jonas Ådahl

    Permission to use, copy, modify, distribute, and sell this
    software and its documentation for any purpose is hereby granted
    without fee, provided that the above copyright notice appear in
    all copies and that both that copyright notice and this permission
    notice appear in supporting documentation, and that the name of
    the copyright holders not be used in advertising or publicity
    pertaining to distribution of the software without specific,
    written prior permission.  The copyright holders make no
    representations about the suitability of this software for any
    purpose.  It is provided "as is" without express or implied
    warranty.

    THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
    SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
    FITNESS, IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
    SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
    AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
    ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
    THIS SOFTWARE.
  </copyright>

  <interface name="_wl_relative_pointer_manager" version="1">
    <description summary="get relative pointer objects">
      A global interface used for getting the relative pointer object for a
      given seat.
    </description>

    <request name="get_relative_pointer">
      <description summary="get a relative pointer object">
        Create a relative pointer interface for the pointer of the given seat.

        This request only takes effect if the seat has the pointer capability.
      </description>

      <arg name="id" type="new_id" interface="_wl_relative_pointer"/>
      <arg name="seat" type="object" interface="wl_seat"/>
    </request>
  </interface>

  <interface name="_wl_relative_pointer" version="1">
    <description summary="relative pointer object">
      A wl_relative_pointer object is an extension to the wl_pointer interface
      only used for emitting relative pointer events. It will only emit events
      when the parent pointer has focus.
    </description>

    <request name="release" type="destructor">
      <description summary="release the relative pointer object"/>
    </request>

    <event name="relative_motion">
      <description summary="relative pointer motion">
        Relative pointer motion from the pointer of the seat associated with
        this object.

        This event contains both the accelerated motion delta and the
        non-accelerated motion delta. The non-accelerated delta is, when
        applicable, the regular pointer motion delta as it was before having
        applied motion acceleration transformations. Note that it does not
        represent 'raw' events as they were read from some device. What
        acceleration corresponds to is device specific and may be identical
        to non-accelerated for some devices, while for others not.

        Relative motions are not coupled to wl_pointer.motion events, and can
        be sent in combination with such events, but also independently. There
        may also be scenarious where wl_pointer.motion is sent, but there is no
        relative motion.
      </description>

      <arg name="time" type="uint"
           summary="timestamp with millisecond granularity"/>
      <arg name="dx" type="fixed"
           summary="x component of the motion vector"/>
      <arg name="dy" type="fixed"
           summary="y component of the motion vector"/>
      <arg name="dx_noaccel" type="fixed"
           summary="x component of the nonaccelerated motion vector"/>
      <arg name="dy_noaccel" type="fixed"
           summary="y component of the nonaccelerated motion vector"/>
    </event>
  </interface>

</protocol>
